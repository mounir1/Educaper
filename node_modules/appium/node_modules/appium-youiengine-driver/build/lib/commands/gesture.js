'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _appiumBaseDriver = require('appium-base-driver');

var _utils = require('../utils');

var commands = {};

commands.click = function callee$0$0(el) {
  var retVal;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(this.tapEl(el));

      case 2:
        retVal = context$1$0.sent;
        return context$1$0.abrupt('return', retVal);

      case 4:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.tapEl = function callee$0$0(el, longPress) {
  var commandName, commandObject, commandJSON, data, result;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:

        // perform a tap on the given element
        // if longPress is true, the tap becomes a longPress action

        el = (0, _utils.unwrapEl)(el);

        commandName = 'tap';

        if (longPress) {
          commandName = 'longpress';
        }

        commandObject = {
          name: commandName,
          args: ['' + el]
        };
        commandJSON = JSON.stringify(commandObject);
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(this.executeSocketCommand(commandJSON));

      case 7:
        data = context$1$0.sent;
        result = undefined;
        context$1$0.prev = 9;

        result = JSON.parse(data);
        context$1$0.next = 16;
        break;

      case 13:
        context$1$0.prev = 13;
        context$1$0.t0 = context$1$0['catch'](9);
        throw new Error("Bad response from click");

      case 16:
        if (!(result.status === _utils.youiEngineDriverReturnValues.WEBDRIVER_STALE_ELEMENT)) {
          context$1$0.next = 18;
          break;
        }

        throw new _appiumBaseDriver.errors.StaleElementReferenceError();

      case 18:
        return context$1$0.abrupt('return', result.value);

      case 19:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[9, 13]]);
};

commands.tapElXY = function callee$0$0(el, x, y, longPress) {
  var commandName, commandObject, commandJSON, data, result;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:

        // perform a tap on the given element at the given x,y offset
        // if longPress is true, the tap becomes a longPress action

        el = (0, _utils.unwrapEl)(el);

        commandName = 'tap';

        if (longPress) {
          commandName = 'longpress';
        }

        commandObject = {
          name: commandName,
          args: ['' + el, '' + x, '' + y]
        };
        commandJSON = JSON.stringify(commandObject);
        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(this.executeSocketCommand(commandJSON));

      case 7:
        data = context$1$0.sent;
        result = undefined;
        context$1$0.prev = 9;

        result = JSON.parse(data);
        context$1$0.next = 16;
        break;

      case 13:
        context$1$0.prev = 13;
        context$1$0.t0 = context$1$0['catch'](9);
        throw new Error("Bad response from tapElXY");

      case 16:
        if (!(result.status === _utils.youiEngineDriverReturnValues.WEBDRIVER_UNKNOWN_COMMAND)) {
          context$1$0.next = 20;
          break;
        }

        throw new _appiumBaseDriver.errors.UnknownCommandError();

      case 20:
        if (!(result.status === _utils.youiEngineDriverReturnValues.WEBDRIVER_NO_SUCH_ELEMENT)) {
          context$1$0.next = 24;
          break;
        }

        throw new _appiumBaseDriver.errors.NoSuchElementError();

      case 24:
        if (!(result.status === _utils.youiEngineDriverReturnValues.WEBDRIVER_STALE_ELEMENT)) {
          context$1$0.next = 26;
          break;
        }

        throw new _appiumBaseDriver.errors.StaleElementReferenceError();

      case 26:
        return context$1$0.abrupt('return', result.value);

      case 27:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[9, 13]]);
};

commands.tapXY = function callee$0$0(x, y, longPress) {
  var commandName, commandObject, commandJSON, data, result;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        commandName = 'tap';

        if (longPress === true) {
          commandName = 'longpress';
        }

        commandObject = {
          name: commandName,
          args: ['' + x, '' + y]
        };
        commandJSON = JSON.stringify(commandObject);
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(this.executeSocketCommand(commandJSON));

      case 6:
        data = context$1$0.sent;
        result = undefined;
        context$1$0.prev = 8;

        result = JSON.parse(data);
        context$1$0.next = 15;
        break;

      case 12:
        context$1$0.prev = 12;
        context$1$0.t0 = context$1$0['catch'](8);
        throw new Error("Bad response from tapXY");

      case 15:
        if (!(result.status === _utils.youiEngineDriverReturnValues.WEBDRIVER_STALE_ELEMENT)) {
          context$1$0.next = 17;
          break;
        }

        throw new _appiumBaseDriver.errors.StaleElementReferenceError();

      case 17:
        return context$1$0.abrupt('return', result.value);

      case 18:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[8, 12]]);
};

commands.tap = function callee$0$0(gestures, longPress) {
  var elementId, x, y;
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        elementId = gestures[0].options.element;
        x = gestures[0].options.x;
        y = gestures[0].options.y;

        if (!elementId) {
          context$1$0.next = 13;
          break;
        }

        if (!(x && y)) {
          context$1$0.next = 9;
          break;
        }

        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(this.tapElXY(elementId, x, y, longPress));

      case 7:
        context$1$0.next = 11;
        break;

      case 9:
        context$1$0.next = 11;
        return _regeneratorRuntime.awrap(this.tapEl(elementId, longPress));

      case 11:
        context$1$0.next = 15;
        break;

      case 13:
        context$1$0.next = 15;
        return _regeneratorRuntime.awrap(this.tapXY(x, y, longPress));

      case 15:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

commands.doSwipe = function callee$0$0(gestures, longPress) {
  var press, moveTo, startX, startY, endX, endY, _ref, x, y, _ref2, width, height, _ref3, _ref4, commandName, commandObject, commandJSON, data, result;

  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        press = gestures[0];
        moveTo = gestures[1];
        startX = press.options.x || 0, startY = press.options.y || 0, endX = moveTo.options.x || 0, endY = moveTo.options.y || 0;

        if (!press.options.element) {
          context$1$0.next = 17;
          break;
        }

        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(this.getLocation(press.options.element));

      case 6:
        _ref = context$1$0.sent;
        x = _ref.x;
        y = _ref.y;
        context$1$0.next = 11;
        return _regeneratorRuntime.awrap(this.getSize(press.options.element));

      case 11:
        _ref2 = context$1$0.sent;
        width = _ref2.width;
        height = _ref2.height;

        // Use the middle of the element to press on, unless an offset from
        // top left of the element has been specified
        if (!press.options.x && !press.options.y && width && height) {
          startX += width / 2;
          startY += height / 2;
        }

        startX += x || 0;
        startY += y || 0;

      case 17:
        if (!moveTo.options.element) {
          context$1$0.next = 31;
          break;
        }

        context$1$0.next = 20;
        return _regeneratorRuntime.awrap(this.getLocation(moveTo.options.element));

      case 20:
        _ref3 = context$1$0.sent;
        x = _ref3.x;
        y = _ref3.y;
        context$1$0.next = 25;
        return _regeneratorRuntime.awrap(this.getSize(moveTo.options.element));

      case 25:
        _ref4 = context$1$0.sent;
        width = _ref4.width;
        height = _ref4.height;

        endX += x || 0;
        endY += y || 0;

        // Use the middle of the element to move to, unless an offset from
        // top left of the element has been specified
        if (!moveTo.options.x && !moveTo.options.y && width && height) {
          endX += width / 2;
          endY += height / 2;
        }

      case 31:
        commandName = 'swipe';

        if (longPress === true) {
          commandName = 'longpressswipe';
        }

        commandObject = {
          name: commandName,
          args: ['' + startX, '' + startY, '' + endX, '' + endY]
        };
        commandJSON = JSON.stringify(commandObject);
        context$1$0.next = 37;
        return _regeneratorRuntime.awrap(this.executeSocketCommand(commandJSON));

      case 37:
        data = context$1$0.sent;
        result = undefined;
        context$1$0.prev = 39;

        result = JSON.parse(data);
        context$1$0.next = 46;
        break;

      case 43:
        context$1$0.prev = 43;
        context$1$0.t0 = context$1$0['catch'](39);
        throw new Error("Bad response from doSwipe");

      case 46:
        if (!(result.status === _utils.youiEngineDriverReturnValues.WEBDRIVER_STALE_ELEMENT)) {
          context$1$0.next = 48;
          break;
        }

        throw new _appiumBaseDriver.errors.StaleElementReferenceError();

      case 48:
        return context$1$0.abrupt('return', result.value);

      case 49:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[39, 43]]);
};

commands.performTouch = function callee$0$0(gestures) {
  return _regeneratorRuntime.async(function callee$0$0$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        if (!(gestures.length === 3)) {
          context$1$0.next = 13;
          break;
        }

        if (!(gestures[0].action === 'press' && gestures[1].action === 'moveTo' && gestures[2].action === 'release')) {
          context$1$0.next = 7;
          break;
        }

        context$1$0.next = 4;
        return _regeneratorRuntime.awrap(this.doSwipe(gestures, false));

      case 4:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 7:
        if (!(gestures[0].action === 'longPress' && gestures[1].action === 'moveTo' && gestures[2].action === 'release')) {
          context$1$0.next = 11;
          break;
        }

        context$1$0.next = 10;
        return _regeneratorRuntime.awrap(this.doSwipe(gestures, true));

      case 10:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 11:
        context$1$0.next = 24;
        break;

      case 13:
        if (!(gestures.length === 2)) {
          context$1$0.next = 24;
          break;
        }

        if (!(gestures[0].action === 'press' && gestures[1].action === 'release')) {
          context$1$0.next = 20;
          break;
        }

        context$1$0.next = 17;
        return _regeneratorRuntime.awrap(this.tap(gestures, false));

      case 17:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 20:
        if (!(gestures[0].action === 'longPress' && gestures[1].action === 'release')) {
          context$1$0.next = 24;
          break;
        }

        context$1$0.next = 23;
        return _regeneratorRuntime.awrap(this.tap(gestures, true));

      case 23:
        return context$1$0.abrupt('return', context$1$0.sent);

      case 24:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
};

exports['default'] = commands;
module.exports = exports['default'];

// get status returned

// perform a tap at the given x,y screen coordinate
// if longPress is true, the tap becomes a longPress action

// get status returned

// parse the given gestures array to call the appropriate tap method
// if longPress is true, the tap is a long press action

// we are either tapping on the default location of the element
// top left has been specified of the element has been specified

// tapping with an element parameter is the same as click on a WebElement

// we are tapping at an absolute x,y coordinate on the screen

// parse input values

// construct the command object

// get status returned
//# sourceMappingURL=data:application/json;charset=utf8;base64,
