'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _appiumSupport = require('appium-support');

var _requestPromise = require('request-promise');

var _requestPromise2 = _interopRequireDefault(_requestPromise);

var _logger = require('./logger');

var _logger2 = _interopRequireDefault(_logger);

var _crypto = require('crypto');

var _crypto2 = _interopRequireDefault(_crypto);

/**
 * UI2_VER, SERVER_DOWNLOAD_SHA512, SERVER_TEST_DOWNLOAD_SHA512 should be updated for every appium-uiautomator2-server release.
 */
var UI2_VER = "v0.0.7";
var SERVER_DOWNLOAD_SHA512 = "159268c91b5bfcd17a0ae83c2bded716a8102c63a33e9b7ab3958ebd2c474b7d9fe687bfd7cefcc2f9840439923851ec457bd0cc0365a01f4b0b3a28587d12d8";
var SERVER_TEST_DOWNLOAD_SHA512 = "fff0fc24a28e99afc96b7589867a5d50cdec9a63790817796d31875fa0765296b1e0b2a90d52708f15bfdf88d958324cc94bf7f665a041203673f04934a887e9";

var UI2_SERVER_DOWNLOAD = 'https://github.com/appium/appium-uiautomator2-server/releases/download' + ('/' + UI2_VER + '/appium-uiautomator2-server-' + UI2_VER + '.apk');
var UI2_SERVER_TEST_DOWNLOAD = 'https://github.com/appium/appium-uiautomator2-server/releases/download' + ('/' + UI2_VER + '/appium-uiautomator2-server-debug-androidTest.apk');
var UI2_DIR = _path2['default'].resolve(__dirname, "..", "..", "uiautomator2");
var UI2_SERVER_APK_PATH = _path2['default'].resolve(UI2_DIR, 'appium-uiautomator2-server-' + UI2_VER + '.apk');
var UI2_TEST_APK_PATH = _path2['default'].resolve(UI2_DIR, 'appium-uiautomator2-server-debug-androidTest.apk');

function setupUiAutomator2() {
  return _regeneratorRuntime.async(function setupUiAutomator2$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(hashCheck(UI2_SERVER_APK_PATH, SERVER_DOWNLOAD_SHA512));

      case 2:
        context$1$0.t0 = context$1$0.sent;

        if (!context$1$0.t0) {
          context$1$0.next = 7;
          break;
        }

        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(hashCheck(UI2_TEST_APK_PATH, SERVER_TEST_DOWNLOAD_SHA512));

      case 6:
        context$1$0.t0 = context$1$0.sent;

      case 7:
        if (!context$1$0.t0) {
          context$1$0.next = 12;
          break;
        }

        _logger2['default'].info("UiAutomator2 apk exists and has correct hash, skipping download");
        return context$1$0.abrupt('return');

      case 12:
        context$1$0.next = 14;
        return _regeneratorRuntime.awrap(downloadUiAutomator2ServerApk());

      case 14:
        context$1$0.next = 16;
        return _regeneratorRuntime.awrap(serverExists());

      case 16:
        if (context$1$0.sent) {
          context$1$0.next = 18;
          break;
        }

        throw new Error("Something went wrong in setting up UiAutomator2");

      case 18:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function hashCheck(fileName, SHA512) {
  var buffer, fingerprint;
  return _regeneratorRuntime.async(function hashCheck$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(fileName));

      case 2:
        if (!context$1$0.sent) {
          context$1$0.next = 10;
          break;
        }

        buffer = require("fs").readFileSync(fileName);
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(sha512(buffer));

      case 6:
        fingerprint = context$1$0.sent;
        return context$1$0.abrupt('return', fingerprint === SHA512);

      case 10:
        return context$1$0.abrupt('return', false);

      case 11:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function downloadUiAutomator2ServerApk() {
  var serverApk, serverTestApk, serverFingerprint, serverTestFingerprint;
  return _regeneratorRuntime.async(function downloadUiAutomator2ServerApk$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.next = 2;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.mkdir(UI2_DIR));

      case 2:
        _logger2['default'].info('downloading UiAutomator2 Server APK ' + UI2_VER + ' : ' + UI2_SERVER_DOWNLOAD);
        _logger2['default'].info('downloading UiAutomator2 Server test APK ' + UI2_VER + ' : ' + UI2_SERVER_TEST_DOWNLOAD);
        context$1$0.next = 6;
        return _regeneratorRuntime.awrap(_requestPromise2['default'].get({ url: UI2_SERVER_DOWNLOAD, encoding: null }));

      case 6:
        serverApk = context$1$0.sent;
        context$1$0.next = 9;
        return _regeneratorRuntime.awrap(_requestPromise2['default'].get({ url: UI2_SERVER_TEST_DOWNLOAD, encoding: null }));

      case 9:
        serverTestApk = context$1$0.sent;

        if (!(!serverApk instanceof Buffer)) {
          context$1$0.next = 12;
          break;
        }

        throw new Error(Object.prototype.toString.call(serverApk));

      case 12:
        if (!(!serverTestApk instanceof Buffer)) {
          context$1$0.next = 14;
          break;
        }

        throw new Error(Object.prototype.toString.call(serverTestApk));

      case 14:
        context$1$0.next = 16;
        return _regeneratorRuntime.awrap(sha512(serverApk));

      case 16:
        serverFingerprint = context$1$0.sent;
        context$1$0.next = 19;
        return _regeneratorRuntime.awrap(sha512(serverTestApk));

      case 19:
        serverTestFingerprint = context$1$0.sent;

        if (!(serverFingerprint !== SERVER_DOWNLOAD_SHA512)) {
          context$1$0.next = 24;
          break;
        }

        _logger2['default'].errorAndThrow('bad Server SHA512 fingerprint: ' + serverFingerprint);
        _logger2['default'].error("Stopping the installation");
        return context$1$0.abrupt('return');

      case 24:
        if (!(serverTestFingerprint !== SERVER_TEST_DOWNLOAD_SHA512)) {
          context$1$0.next = 28;
          break;
        }

        _logger2['default'].errorAndThrow('bad Server test SHA512 fingerprint: ' + serverTestFingerprint);
        _logger2['default'].error("Stopping the installation");
        return context$1$0.abrupt('return');

      case 28:
        context$1$0.next = 30;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.writeFile(UI2_SERVER_APK_PATH, serverApk, { encoding: 'binary' }));

      case 30:
        context$1$0.next = 32;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.writeFile(UI2_TEST_APK_PATH, serverTestApk, { encoding: 'binary' }));

      case 32:
        context$1$0.next = 34;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.chmod(UI2_SERVER_APK_PATH, 420));

      case 34:
        context$1$0.next = 36;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.chmod(UI2_TEST_APK_PATH, 420));

      case 36:

        _logger2['default'].info("UiAutomator2 Server APKs downloaded");

      case 37:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function sha512(buffer) {
  var hash;
  return _regeneratorRuntime.async(function sha512$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        hash = _crypto2['default'].createHash('sha512');
        return context$1$0.abrupt('return', hash.update(buffer).digest('hex'));

      case 2:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this);
}

function serverExists() {
  return _regeneratorRuntime.async(function serverExists$(context$1$0) {
    while (1) switch (context$1$0.prev = context$1$0.next) {
      case 0:
        context$1$0.prev = 0;
        context$1$0.next = 3;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(UI2_SERVER_APK_PATH));

      case 3:
        context$1$0.t0 = context$1$0.sent;

        if (!context$1$0.t0) {
          context$1$0.next = 8;
          break;
        }

        context$1$0.next = 7;
        return _regeneratorRuntime.awrap(_appiumSupport.fs.exists(UI2_TEST_APK_PATH));

      case 7:
        context$1$0.t0 = context$1$0.sent;

      case 8:
        return context$1$0.abrupt('return', context$1$0.t0);

      case 11:
        context$1$0.prev = 11;
        context$1$0.t1 = context$1$0['catch'](0);

        if (!(context$1$0.t1.code.indexOf("ENOENT") !== -1)) {
          context$1$0.next = 15;
          break;
        }

        return context$1$0.abrupt('return', false);

      case 15:
        throw context$1$0.t1;

      case 16:
      case 'end':
        return context$1$0.stop();
    }
  }, null, this, [[0, 11]]);
}

exports.setupUiAutomator2 = setupUiAutomator2;
exports.serverExists = serverExists;
exports.UI2_SERVER_APK_PATH = UI2_SERVER_APK_PATH;
exports.UI2_TEST_APK_PATH = UI2_TEST_APK_PATH;
exports.UI2_VER = UI2_VER;
//# sourceMappingURL=data:application/json;charset=utf8;base64,
