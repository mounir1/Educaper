require('source-map-support').install();

'use strict';

var _helpers = require('./helpers');

describe('test logger', function () {
  var writers = undefined,
      log = undefined;
  before(function () {
    writers = (0, _helpers.setupWriters)();
    log = (0, _helpers.getDynamicLogger)(true);
  });

  after(function () {
    (0, _helpers.restoreWriters)(writers);
  });

  it('should contains levels', function () {
    log.levels.should.have.length.above(3);
    log.levels[2].should.equal('debug');
  });

  it('should unwrap', function () {
    log.unwrap.should.exist;
    log.unwrap().should.exist;
  });

  it('should rewrite npmlog levels during testing', function () {
    var text = 'hi';
    log.silly(text);
    log.verbose(text);
    log.info(text);
    log.http(text);
    log.warn(text);
    log.error(text);
    (function () {
      log.errorAndThrow(text);
    }).should['throw'](text);
    (0, _helpers.assertOutputDoesntContain)(writers, text);
  });
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvbG9nZ2VyL2xvZ2dlci10ZXN0LXNwZWNzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7dUJBRzBDLFdBQVc7O0FBRXJELFFBQVEsQ0FBQyxhQUFhLEVBQUUsWUFBTTtBQUM1QixNQUFJLE9BQU8sWUFBQTtNQUFFLEdBQUcsWUFBQSxDQUFDO0FBQ2pCLFFBQU0sQ0FBQyxZQUFNO0FBQ1gsV0FBTyxHQUFHLDRCQUFjLENBQUM7QUFDekIsT0FBRyxHQUFHLCtCQUFpQixJQUFJLENBQUMsQ0FBQztHQUM5QixDQUFDLENBQUM7O0FBRUgsT0FBSyxDQUFDLFlBQU07QUFDVixpQ0FBZSxPQUFPLENBQUMsQ0FBQztHQUN6QixDQUFDLENBQUM7O0FBRUgsSUFBRSxDQUFDLHdCQUF3QixFQUFFLFlBQU07QUFDakMsT0FBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7QUFDdkMsT0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO0dBQ3JDLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsZUFBZSxFQUFFLFlBQU07QUFDeEIsT0FBRyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0FBQ3hCLE9BQUcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDO0dBQzNCLENBQUMsQ0FBQzs7QUFFSCxJQUFFLENBQUMsNkNBQTZDLEVBQUUsWUFBTTtBQUN0RCxRQUFNLElBQUksR0FBRyxJQUFJLENBQUM7QUFDbEIsT0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoQixPQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2xCLE9BQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDZixPQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2YsT0FBRyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNmLE9BQUcsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDaEIsS0FBQyxZQUFNO0FBQUUsU0FBRyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUFFLENBQUEsQ0FBRSxNQUFNLFNBQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUN4RCw0Q0FBMEIsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0dBQzFDLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2xvZ2dlci9sb2dnZXItdGVzdC1zcGVjcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHRyYW5zcGlsZTptb2NoYVxuXG5pbXBvcnQgeyBnZXREeW5hbWljTG9nZ2VyLCByZXN0b3JlV3JpdGVycywgc2V0dXBXcml0ZXJzLFxuICAgICAgICAgYXNzZXJ0T3V0cHV0RG9lc250Q29udGFpbiB9IGZyb20gJy4vaGVscGVycyc7XG5cbmRlc2NyaWJlKCd0ZXN0IGxvZ2dlcicsICgpID0+IHtcbiAgbGV0IHdyaXRlcnMsIGxvZztcbiAgYmVmb3JlKCgpID0+IHtcbiAgICB3cml0ZXJzID0gc2V0dXBXcml0ZXJzKCk7XG4gICAgbG9nID0gZ2V0RHluYW1pY0xvZ2dlcih0cnVlKTtcbiAgfSk7XG5cbiAgYWZ0ZXIoKCkgPT4ge1xuICAgIHJlc3RvcmVXcml0ZXJzKHdyaXRlcnMpO1xuICB9KTtcblxuICBpdCgnc2hvdWxkIGNvbnRhaW5zIGxldmVscycsICgpID0+IHtcbiAgICBsb2cubGV2ZWxzLnNob3VsZC5oYXZlLmxlbmd0aC5hYm92ZSgzKTtcbiAgICBsb2cubGV2ZWxzWzJdLnNob3VsZC5lcXVhbCgnZGVidWcnKTtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCB1bndyYXAnLCAoKSA9PiB7XG4gICAgbG9nLnVud3JhcC5zaG91bGQuZXhpc3Q7XG4gICAgbG9nLnVud3JhcCgpLnNob3VsZC5leGlzdDtcbiAgfSk7XG5cbiAgaXQoJ3Nob3VsZCByZXdyaXRlIG5wbWxvZyBsZXZlbHMgZHVyaW5nIHRlc3RpbmcnLCAoKSA9PiB7XG4gICAgY29uc3QgdGV4dCA9ICdoaSc7XG4gICAgbG9nLnNpbGx5KHRleHQpO1xuICAgIGxvZy52ZXJib3NlKHRleHQpO1xuICAgIGxvZy5pbmZvKHRleHQpO1xuICAgIGxvZy5odHRwKHRleHQpO1xuICAgIGxvZy53YXJuKHRleHQpO1xuICAgIGxvZy5lcnJvcih0ZXh0KTtcbiAgICAoKCkgPT4geyBsb2cuZXJyb3JBbmRUaHJvdyh0ZXh0KTsgfSkuc2hvdWxkLnRocm93KHRleHQpO1xuICAgIGFzc2VydE91dHB1dERvZXNudENvbnRhaW4od3JpdGVycywgdGV4dCk7XG4gIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii4uLy4uLy4uIn0=
