require('source-map-support').install();

'use strict';

var _regeneratorRuntime = require('babel-runtime/regenerator')['default'];

var _interopRequireDefault = require('babel-runtime/helpers/interop-require-default')['default'];

var _this = this;

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _chai = require('chai');

var _chai2 = _interopRequireDefault(_chai);

var _chaiAsPromised = require('chai-as-promised');

var _chaiAsPromised2 = _interopRequireDefault(_chaiAsPromised);

var _wd = require('wd');

var _wd2 = _interopRequireDefault(_wd);

var _ = require('../..');

var TEST_PORT = 4884;
var TEST_HOST = 'localhost';
var TEST_APP = _path2['default'].resolve(__dirname, '..', '..', '..', 'test', 'fixtures', 'selendroid-test-app.apk');

var shouldStartServer = process.env.USE_RUNNING_SERVER !== "0";

_chai2['default'].should();
_chai2['default'].use(_chaiAsPromised2['default']);

describe('SelendroidDriver', function () {
  var server = null;

  before(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (!shouldStartServer) {
            context$2$0.next = 4;
            break;
          }

          context$2$0.next = 3;
          return _regeneratorRuntime.awrap((0, _.startServer)(TEST_PORT, TEST_HOST));

        case 3:
          server = context$2$0.sent;

        case 4:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });
  after(function callee$1$0() {
    return _regeneratorRuntime.async(function callee$1$0$(context$2$0) {
      while (1) switch (context$2$0.prev = context$2$0.next) {
        case 0:
          if (server) {
            server.close();
          }

        case 1:
        case 'end':
          return context$2$0.stop();
      }
    }, null, _this);
  });

  describe('set network connection', function () {
    // setting network connection uses android-driver methods that call
    var caps = {
      platformName: 'Android',
      deviceName: 'Android Emulator',
      app: TEST_APP
    };

    it('should start a session', function callee$2$0() {
      var driver, nc;
      return _regeneratorRuntime.async(function callee$2$0$(context$3$0) {
        while (1) switch (context$3$0.prev = context$3$0.next) {
          case 0:
            driver = _wd2['default'].promiseChainRemote(TEST_HOST, TEST_PORT);
            context$3$0.next = 3;
            return _regeneratorRuntime.awrap(driver.init(caps));

          case 3:
            context$3$0.next = 5;
            return _regeneratorRuntime.awrap(driver.setNetworkConnection(4));

          case 5:
            nc = context$3$0.sent;

            nc.should.eql(4);

            context$3$0.next = 9;
            return _regeneratorRuntime.awrap(driver.quit());

          case 9:
          case 'end':
            return context$3$0.stop();
        }
      }, null, _this);
    });
  });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZnVuY3Rpb25hbC9jb21tYW5kLWUyZS1zcGVjcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O29CQUVpQixNQUFNOzs7O29CQUNOLE1BQU07Ozs7OEJBQ0ksa0JBQWtCOzs7O2tCQUM5QixJQUFJOzs7O2dCQUNTLE9BQU87O0FBR25DLElBQU0sU0FBUyxHQUFHLElBQUksQ0FBQztBQUN2QixJQUFNLFNBQVMsR0FBRyxXQUFXLENBQUM7QUFDOUIsSUFBTSxRQUFRLEdBQUcsa0JBQUssT0FBTyxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUMvQyx5QkFBeUIsQ0FBQyxDQUFDOztBQUV6RCxJQUFNLGlCQUFpQixHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQWtCLEtBQUssR0FBRyxDQUFDOztBQUVqRSxrQkFBSyxNQUFNLEVBQUUsQ0FBQztBQUNkLGtCQUFLLEdBQUcsNkJBQWdCLENBQUM7O0FBRXpCLFFBQVEsQ0FBQyxrQkFBa0IsRUFBRSxZQUFNO0FBQ2pDLE1BQUksTUFBTSxHQUFHLElBQUksQ0FBQzs7QUFFbEIsUUFBTSxDQUFDOzs7O2VBQ0QsaUJBQWlCOzs7Ozs7MkNBQ0osbUJBQVksU0FBUyxFQUFFLFNBQVMsQ0FBQzs7O0FBQWhELGdCQUFNOzs7Ozs7O0dBRVQsQ0FBQyxDQUFDO0FBQ0gsT0FBSyxDQUFDOzs7O0FBQ0osY0FBSSxNQUFNLEVBQUU7QUFDVixrQkFBTSxDQUFDLEtBQUssRUFBRSxDQUFDO1dBQ2hCOzs7Ozs7O0dBQ0YsQ0FBQyxDQUFDOztBQUVILFVBQVEsQ0FBQyx3QkFBd0IsRUFBRSxZQUFNOztBQUV2QyxRQUFNLElBQUksR0FBRztBQUNYLGtCQUFZLEVBQUUsU0FBUztBQUN2QixnQkFBVSxFQUFFLGtCQUFrQjtBQUM5QixTQUFHLEVBQUUsUUFBUTtLQUNkLENBQUM7O0FBRUYsTUFBRSxDQUFDLHdCQUF3QixFQUFFO1VBQ3ZCLE1BQU0sRUFHTixFQUFFOzs7O0FBSEYsa0JBQU0sR0FBRyxnQkFBRyxrQkFBa0IsQ0FBQyxTQUFTLEVBQUUsU0FBUyxDQUFDOzs2Q0FDbEQsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7Ozs7NkNBRVIsTUFBTSxDQUFDLG9CQUFvQixDQUFDLENBQUMsQ0FBQzs7O0FBQXpDLGNBQUU7O0FBQ04sY0FBRSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Ozs2Q0FFWCxNQUFNLENBQUMsSUFBSSxFQUFFOzs7Ozs7O0tBQ3BCLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2Z1bmN0aW9uYWwvY29tbWFuZC1lMmUtc3BlY3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0cmFuc3BpbGU6bW9jaGFcblxuaW1wb3J0IHBhdGggZnJvbSAncGF0aCc7XG5pbXBvcnQgY2hhaSBmcm9tICdjaGFpJztcbmltcG9ydCBjaGFpQXNQcm9taXNlZCBmcm9tICdjaGFpLWFzLXByb21pc2VkJztcbmltcG9ydCB3ZCBmcm9tICd3ZCc7XG5pbXBvcnQgeyBzdGFydFNlcnZlciB9IGZyb20gJy4uLy4uJztcblxuXG5jb25zdCBURVNUX1BPUlQgPSA0ODg0O1xuY29uc3QgVEVTVF9IT1NUID0gJ2xvY2FsaG9zdCc7XG5jb25zdCBURVNUX0FQUCA9IHBhdGgucmVzb2x2ZShfX2Rpcm5hbWUsICcuLicsICcuLicsICcuLicsICd0ZXN0JywgJ2ZpeHR1cmVzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICdzZWxlbmRyb2lkLXRlc3QtYXBwLmFwaycpO1xuXG5jb25zdCBzaG91bGRTdGFydFNlcnZlciA9IHByb2Nlc3MuZW52LlVTRV9SVU5OSU5HX1NFUlZFUiAhPT0gXCIwXCI7XG5cbmNoYWkuc2hvdWxkKCk7XG5jaGFpLnVzZShjaGFpQXNQcm9taXNlZCk7XG5cbmRlc2NyaWJlKCdTZWxlbmRyb2lkRHJpdmVyJywgKCkgPT4ge1xuICBsZXQgc2VydmVyID0gbnVsbDtcblxuICBiZWZvcmUoYXN5bmMgKCkgPT4ge1xuICAgIGlmIChzaG91bGRTdGFydFNlcnZlcikge1xuICAgICAgc2VydmVyID0gYXdhaXQgc3RhcnRTZXJ2ZXIoVEVTVF9QT1JULCBURVNUX0hPU1QpO1xuICAgIH1cbiAgfSk7XG4gIGFmdGVyKGFzeW5jICgpID0+IHtcbiAgICBpZiAoc2VydmVyKSB7XG4gICAgICBzZXJ2ZXIuY2xvc2UoKTtcbiAgICB9XG4gIH0pO1xuXG4gIGRlc2NyaWJlKCdzZXQgbmV0d29yayBjb25uZWN0aW9uJywgKCkgPT4ge1xuICAgIC8vIHNldHRpbmcgbmV0d29yayBjb25uZWN0aW9uIHVzZXMgYW5kcm9pZC1kcml2ZXIgbWV0aG9kcyB0aGF0IGNhbGxcbiAgICBjb25zdCBjYXBzID0ge1xuICAgICAgcGxhdGZvcm1OYW1lOiAnQW5kcm9pZCcsXG4gICAgICBkZXZpY2VOYW1lOiAnQW5kcm9pZCBFbXVsYXRvcicsXG4gICAgICBhcHA6IFRFU1RfQVBQXG4gICAgfTtcblxuICAgIGl0KCdzaG91bGQgc3RhcnQgYSBzZXNzaW9uJywgYXN5bmMgKCkgPT4ge1xuICAgICAgbGV0IGRyaXZlciA9IHdkLnByb21pc2VDaGFpblJlbW90ZShURVNUX0hPU1QsIFRFU1RfUE9SVCk7XG4gICAgICBhd2FpdCBkcml2ZXIuaW5pdChjYXBzKTtcblxuICAgICAgbGV0IG5jID0gYXdhaXQgZHJpdmVyLnNldE5ldHdvcmtDb25uZWN0aW9uKDQpO1xuICAgICAgbmMuc2hvdWxkLmVxbCg0KTtcblxuICAgICAgYXdhaXQgZHJpdmVyLnF1aXQoKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdfQ==